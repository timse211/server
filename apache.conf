input {
    file {
#        path => "/rawData/ELKplus_log/Apache/data/access*"
        path => "/home/Apache/Apache-Sample.log"
        start_position => beginning
		sincedb_path => "/dev/null"
		tags => "apache"
    }
}

filter {
	if "apache" in [tags] {
	grok {
#		match => { "message" => "%{IPORHOST:clientip} %{USER:ident} %{USER:auth} \[%{HTTPDATE:timestamp}\] \"%{DATA:request}\" %{NUMBER:response} %{NUMBER:bytes} \"%{DATA:referrer}\" \"%{GREEDYDATA:agent}\""}
		match => { "message" => "%{IPORHOST:clientip} %{USER:ident} %{USER:auth} \[%{DATA:timestamp}\] \"%{DATA:request}\" %{NUMBER:response} %{NUMBER:bytes} \"%{DATA:referrer}\" \"%{GREEDYDATA:agent}\""}
	}
	
	grok {
		match => { "request" => "%{WORD:http_method} %{DATA:requestdetail} %{NOTSPACE:http_version}" }
		match => { "request" => "%{DATA:request}" }
	}
	
    grok {
       	match => { "referrer" => "%{WORD}://%{DATA}/%{WORD:University}" }
        match => { "referrer" => "/%{WORD:University}" }		
        match => { "referrer" => "%{DATA:referrer}" }
	}

    date {
        match => [ "timestamp", "dd/MMM/YYYY:HH:mm:ss Z" ]
    }

    mutate {
        convert => { "bytes" => "integer" }

    }

    geoip {
        source => "clientip"
        target => "geoip"
	}

	if [University] == "CYCU" {
		mutate {
			add_tag => ["CYCU"]
		}
	}
#	if "CYCU" in [message] {
#		mutate {
#			add_tag => ["CYCU"]
#		}
#	}
	mutate {
		add_field => { "response_num" => "%{response}" }
	}
	mutate {
		convert => {"response_num" => "integer"}
	}
	if [response_num] >= 400 and [response_num] <= 500 {
		mutate {
			add_field => {
				"response_description" => "something wrong"
			}
		}
	}
	if [http_method] != "GET" and [http_method] != "POST" {
        mutate {
            add_field => {
                "http_method_description" => "methodç•°å¸¸"
            }
        }
	}
}
}
output {
	if "apache" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logstash-apache-access1-%{+YYYY.MM.dd}"
    }
#   stdout { codec => rubydebug }
}
}
